context_picked
View(context_picked)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/kv0xa0spa6q5l7q/semiGodsSemiDevils.json?dl=1") -> semiGodsSemiDevils
View(semiGodsSemiDevils)
View(semiGodsSemiDevils[[5]][[1]])
p2pick <- semiGodsSemiDevils$data == "P2"
p2pick <- semiGodsSemiDevils$data$section == "P2"
str(semiGodsSemiDevils)
str(semiGodsSemiDevils$data)
semiGodsSemiDevils$data[[2]]
semiGodsSemiDevils$data$section
str_detect(semiGodsSemiDevils$data,"P2")
semiGodsSemiDevils$data$section
str_detect(semiGodsSemiDevils$data,"P2")
p2pick <- semiGodsSemiDevils$data[[1]]$section == "P2"
p2pick <- semiGodsSemiDevils$data[[1]]$section == "P2"
context_picked <- semiGodsSemiDevils$data[[1]]$text
context_picked
context_picked <- semiGodsSemiDevils$data[[1]]$text[[p2pick]]
context_picked <- semiGodsSemiDevils$data[[1]]$text[p2pick]
context_picked
textExample <- c("段1......。　　段2....。")
context_picked_split <-
str_split(context_picked,(?="\\s\\s"))
context_picked_split <-
str_split(context_picked,(?="\\s"))
context_picked_split <-
str_split(context_picked,(?= `\\s`))
str_split(context_picked,(?=[`\\s`])
context_picked_split <-
str_split(context_picked,"(?=`\\s`)")
str(context_picked_split)
# context_picked_split
context_picked_split <-
str_split(context_picked,"(?=`\\s\\s`)")
str(context_picked_split)
# context_picked_split
context_picked_split <-
str_split(context_picked,"(?=`。\\s\\s`)")
str(context_picked_split)
# context_picked_split
context_picked_split <-
str_split(context_picked,"(?=`。\\s\\s`)")
str(context_picked_split)
# context_picked_split
context_picked_split <-
str_split(context_picked,"(?=`\\s\\s`)")
str(context_picked_split)
# context_picked_split
context_picked_split <-
str_split(context_picked,"(?<=`\\s\\s`)")
str(context_picked_split)
# context_picked_split
context_picked_split <-
str_split_fixed(context_picked,"(?<=`\\s\\s`)")
context_picked_split <-
str_split(context_picked,"(?=`\\s\\s`)")
str(context_picked_split)
# context_picked_split
context_picked_split
context_picked_split <-
str_split(context_picked,"\\s\\s")
str(context_picked_split)
# context_picked_split
mention_duan <-str_extract_all(
context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|及姓段的小子)")
mention_duan
mention_duan <-str_extract_all(
context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|及姓段的小子)")
mention_duan
mention_duan <-str_extract_all(
context_picked_split[1:124],"(段譽|段兄|段兄弟|段大哥|段相公|段君|及姓段的小子)")
mention_duan
mention_duan <-str_extract_all(
context_picked_split[1],"(段譽|段兄|段兄弟|段大哥|段相公|段君|及姓段的小子)")
mention_duan
mention_duan <-str_extract_all(
context_picked_split,"(?<=段)")
mention_duan
mention_duan <-str_extract_all(
context_picked_split[1],"(?<=段)")
mention_duan
str(context_picked_split)
mention_duan <-str_extract_all(
context_picked_split[[1]][1:124],"(?<=段)")
mention_duan
mention_duan <-str_extract_all(
context_picked_split[[1]][1:124],"(?<=`段`)")
mention_duan
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(?<=段)[:graph:]+")
mention_duan
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(?<=段)[:graph:]{1,2}")
mention_duan
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(段譽|段兄|段兄弟|段大哥|段相公|段君|及姓段的小子)")
mention_duan
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(段兄|段兄弟|段大哥|段相公|段君|及姓段的小子)")
mention_duan
beforeduan <- "姓"
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(?<=beforeduan){0,1}段[:graph:]{1,2,3}")
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(?<=beforeduan){0,1}段[:graph:]{1,2,3}")
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(?<=beforeduan){0,1}段[:graph:]{1,2,3}"
)
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓?段[:graph:]{1,2,3}"
)
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓?段"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓?段[:graph:]{1,2,3}"
)
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓?段[:graph:]{1}"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓?段(譽|兄弟|兄|大哥|相公|君|的小子)"
)
mention_duan
str_view_all(mention_duan)
str_view_all(context_picked_split[[1]][1:124],"姓?段(譽|兄弟|兄|大哥|相公|君|的小子)")
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓?段相公"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓段的小子"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(姓段的小子)"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(段譽)"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"段譽"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓段的"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓段[:graph:]"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"段大哥"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"段相公"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓?段(譽|兄弟|兄|大哥|相公|君|的小子)"
)
mention_duan
unlist_mention_duan <-unlist(mention_duan)
table_duan <- table(mention_duan2)
unlist_mention_duan <-unlist(mention_duan)
table_duan <- table(unlist_mention_duan)
table_duan
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]],"姓?段(譽|兄弟|兄|大哥|相公|君|的小子)"
)
mention_duan
unlist_mention_duan <-unlist(mention_duan)
table_duan <- table(unlist_mention_duan)
table_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]],"姓?段(譽|兄弟|兄|大哥|相公|君|的小子)(?=[^弟])"
)
mention_duan
unlist_mention_duan <-unlist(mention_duan)
table_duan <- table(unlist_mention_duan)
table_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]],"姓?段(譽|兄|兄弟|大哥|相公|君|的小子)(?=[^弟])"
)
mention_duan
unlist_mention_duan <-unlist(mention_duan)
table_duan <- table(unlist_mention_duan)
table_duan
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
View(studentHeights)
str(studentHeights)
studentHeights$年齡
studentHeights$學年度 <- factor(studentHeights$學年度)
class(studentHeights$學年度)
studentHeights$學年度 <- factor(studentHeights$學年度,ordered=T)
studentHeights$學年度 <- factor(studentHeights$學年度,ordered=TRUE)
class(studentHeights)
class(studentHeights$學年度)
studentHeights[[1]]
studentHeights$`學年度`  <- factor(studentHeights$學年度,ordered=TRUE)
studentHeights["學年度"]  <- factor(studentHeights["學年度"],ordered=TRUE)
studentHeights[["學年度"]]  <- factor(studentHeights[["學年度"]],ordered=TRUE)
studentHeights[["學年度"]]
studentHeights["學年度"]
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights["學年度"]  <- factor(studentHeights["學年度"],ordered=TRUE)
# studentHeights
studentHeights["學年度"]
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$學年度  <- factor(studentHeights$學年度,ordered=TRUE)
studentHeights$學年度  <-  factor(studentHeights$學年度 ,ordered=TRUE)
# studentHeights
studentHeights$`學年度`  <-  factor(studentHeights$`學年度` ,ordered=TRUE)
# studentHeights
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$`學年度`  <-  factor(studentHeights$`學年度` ,ordered=TRUE)
# studentHeights
studentHeights$`學年度`
levels(studentHeights$學年度)
sort(studentHeights$學年度)
levels_schoolyear <-levels(studentHeights$`學年度`)
studentHeights$`學年度` <- as.integer(studentHeights$`學年度`)
names(studentHeights$`學年度`) <-levels_schoolyear
studentHeights$`學年度` <-sort(studentHeights$`學年度`)
studentHeights$`學年度`  <-  factor(studentHeights$`學年度`,names(studentHeights$`學年度`),ordered=TRUE)
# studentHeights
levels(studentHeights$`學年度`)
levels(studentHeights$`學年度`)
studentHeights$`學年度`
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
levels_schoolyear <-levels(studentHeights$`學年度`)
studentHeights$`學年度` <- as.integer(studentHeights$`學年度`)
names(studentHeights$`學年度`) <-levels_schoolyear
studentHeights$`學年度` <-sort(studentHeights$`學年度`)
studentHeights$`學年度`  <-  factor(studentHeights$`學年度`,names(studentHeights$`學年度`),ordered=TRUE)
# studentHeights
studentHeights$`學年度`
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
levels_schoolyear <-levels(studentHeights$`學年度`)
levels_schoolyear
levels_schoolyear <-levels(studentHeights$`學年度`)
levels_schoolyear
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
levels(studentHeights$`學年度`)
studentHeights$`學年度`
class(studentHeights$`學年度`)
str(studentHeights$`學年度`)
levels(studentHeights$`學年度`)
studentHeights$`學年度`
<- as.integer(studentHeights$`學年度`)
levels_schoolyear <-levels(studentHeights$`學年度`)
names(studentHeights$`學年度`) <-levels_schoolyear
studentHeights$`學年度` <-sort(studentHeights$`學年度`)
studentHeights$`學年度`  <-  factor(studentHeights$`學年度`,names(studentHeights$`學年度`),ordered=TRUE)
# studentHeights
studentHeights$`學年度` <- as.integer(studentHeights$`學年度`)
levels_schoolyear <-levels(studentHeights$`學年度`)
names(studentHeights$`學年度`) <-levels_schoolyear
studentHeights$`學年度` <-sort(studentHeights$`學年度`)
studentHeights$`學年度`  <-  factor(studentHeights$`學年度`,names(studentHeights$`學年度`),ordered=TRUE)
# studentHeights
levels_schoolyear <-levels(studentHeights$`學年度`)
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$`學年度` <- as.integer(studentHeights$`學年度`)
levels_schoolyear <-levels(studentHeights$`學年度`)
levels(studentHeights$`學年度`)
as.integer(studentHeights$`學年度`)
levels(studentHeights$`學年度`)
studentHeights$`學年度` <- factor(studentHeights$`學年度` ,ordered=TRUE)
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$`學年度` <- factor(studentHeights$`學年度` ,ordered=TRUE)
levels(studentHeights$`學年度`)
studentHeights$`學年度` <- as.integer(studentHeights$`學年度`)
studentHeights$`學年度` <- factor(studentHeights$`學年度` ,ordered=TRUE)
levels(studentHeights$`學年度`)
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
as.integer(studentHeights$`學年度`)
levels(studentHeights$`學年度`)
studentHeights$`學年度` <- factor(studentHeights$`學年度` ,ordered=TRUE)
levels(studentHeights$`學年度`)
SORT
sort(studentHeights$學年度)
studentHeights$學年度
class(studentHeights$學年度)
studentHeights$`學年度` <- factor(studentHeights$`學年度`)
levels_schoolyear <- levels(studentHeights$`學年度`)
studentHeights$`學年度` <- as.integer(studentHeights$`學年度`)
names(studentHeights$`學年度`) <-levels_schoolyear
studentHeights$`學年度` <-sort(studentHeights$`學年度`)
studentHeights$`學年度`  <-  factor(studentHeights$`學年度`,names(studentHeights$`學年度`),ordered=TRUE)
# studentHeights
levels(studentHeights$)
levels(studentHeights$`學年度`)
sort(studentHeights$`學年度`)
names(studentHeights$`學年度`)
as.integer(studentHeights$`學年度`)
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
factor(studentHeights$`學年度`)
levels(studentHeights$`學年度`)
levels(studentHeights$學年度)
class(studentHeights$`學年度`)
str(levels(studentHeights$`學年度`))
str(studentHeights$`學年度`))
str(studentHeights$`學年度`)
studentHeights$`學年度` <- factor(studentHeights$`學年度`)
levels(studentHeights$`學年度`)
levels_schoolyear <- levels(studentHeights$`學年度`)
as.integer(studentHeights$`學年度`)
names(studentHeights$`學年度`) <-levels_schoolyear
sort(studentHeights$`學年度`)
studentHeights$`學年度` <- factor(studentHeights$`學年度`)
levels_schoolyear <- levels(studentHeights$`學年度`)
studentHeights$`學年度` <- as.integer(studentHeights$`學年度`)
names(studentHeights$`學年度`) <-levels_schoolyear
studentHeights$`學年度` <-sort(studentHeights$`學年度`)
studentHeights$`學年度`  <-  factor(studentHeights$`學年度`,names(studentHeights$`學年度`),ordered=TRUE)
# studentHeights
levels(studentHeights$`學年度`)
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$`學年度` <- as.integer(studentHeights$`學年度`)
studentHeights$`學年度`  <-  factor(studentHeights$`學年度`,ordered=TRUE)
levels(studentHeights$`學年度`)
class(studentHeights$`學年度`)
studentHeights$`年齡` <- as.integer(studentHeights$`年齡`)
studentHeights$`年齡`  <-  factor(studentHeights$`年齡`,ordered=TRUE)
levels(studentHeights$`年齡`)
class(studentHeights$`年齡`)
studentHeights$`年齡層` <- factor(studentHeights$`年齡層`,ordered=TRUE)
levels(studentHeights$`年齡層`)
level_age <- c(6-8,9-12,13-15)
studentHeights$`年齡層` <- factor(studentHeights$`年齡層`,level_age,ordered=TRUE)
# studentHeights$`年齡層`
levels(studentHeights$`年齡層`)
level_age <- c("6-8","9-12","13-15")
studentHeights$`年齡層` <- factor(studentHeights$`年齡層`,level_age,ordered=TRUE)
# studentHeights$`年齡層`
levels(studentHeights$`年齡層`)
class(studentHeights$`年齡層`)
level_age <- c("6-8","9-12","13-15")
studentHeights$`年齡層` <- factor(studentHeights$`年齡層`,level_age,ordered=TRUE)
studentHeights$`年齡層`
pick6to8 <- studentHeights$`年齡層` == "6-8"
pick6to8
pick6to8 <- studentHeights$`年齡層` == "6-8"
pick9to12 <- studentHeights$`年齡層` == "9-12"
pick13to15 <- studentHeights$`年齡層` == "13-15"
averageHeightByGroup <- c(mean(studentHeights$`年齡層`[pick6to8])
,mean(studentHeights$`年齡層`[pick9to12])
,mean(studentHeights$`年齡層`[pick13to15])
)
averageHeightByGroup
studentHeights$`年齡層`[pick6to8]
pick6to8 <- studentHeights$`年齡層` == "6-8"
pick9to12 <- studentHeights$`年齡層` == "9-12"
pick13to15 <- studentHeights$`年齡層` == "13-15"
averageHeightByGroup <- c(mean(studentHeights$`平均身高`[pick6to8])
,mean(studentHeights$`平均身高`[pick9to12])
,mean(studentHeights$`平均身高`[pick13to15])
)
averageHeightByGroup
class(averg)
class(averageHeightByGroup)
names(averageHeightByGroup) <- level_age
averageHeightByGroup
class(averageHeightByGroup)
pickboy6 <- studentHeights$`類別`[pick6to8] =="男"
pickgirl6 <- studentHeights$`類別`[pick6to8] =="女"
pickboy9 <- studentHeights$`類別`[pick9to12] =="男"
pickgirl9 <- studentHeights$`類別`[pick9to12] =="女"
pickboy13 <- studentHeights$`類別`[pick13to15] =="男"
pickgirl13 <- studentHeights$`類別`[pick13to15] =="女"
heightDifferenceByGroup <- c(
mean(studentHeights$`平均身高`[pickboy6])-mean(studentHeights$`平均身高`[pickgirl6])
)
# heightDifferenceByGroup
heightDifferenceByGroup
pickboy6 <- studentHeights$`類別`[pick6to8] =="男"
pickgirl6 <- studentHeights$`類別`[pick6to8] =="女"
pickboy9 <- studentHeights$`類別`[pick9to12] =="男"
pickgirl9 <- studentHeights$`類別`[pick9to12] =="女"
pickboy13 <- studentHeights$`類別`[pick13to15] =="男"
pickgirl13 <- studentHeights$`類別`[pick13to15] =="女"
heightDifferenceByGroup <- c(
mean(studentHeights$`平均身高`[pickboy6])-mean(studentHeights$`平均身高`[pickgirl6]),
mean(studentHeights$`平均身高`[pickboy9])-mean(studentHeights$`平均身高`[pickgirl9]),
mean(studentHeights$`平均身高`[pickboy13])-mean(studentHeights$`平均身高`[pickgirl13])
)
heightDifferenceByGroup
mean(studentHeights$`平均身高`[pickboy6])
mean(studentHeights$`平均身高`[pickgirl6])
mean(studentHeights$`平均身高`[pickboy9])
mean(studentHeights$`平均身高`[pickboy13])
studentHeights$`類別`[pick6to8]
c(T,T,F,F) %% c(T,F,T,F)
c(T,T,F,F) == c(T,F,T,F)
studentHeights$`平均身高`[pickboy6]
studentHeights$`平均身高`[pickboy9]
pickboy6
averageHeightByGroup
studentHeights$`類別`[pick6to8]
studentHeights$`類別`[pick9to12]
c(T,T,F,F) | c(T,F,T,F)
c(T,T,F,F) & c(T,F,T,F)
pickboy <-studentHeights$`類別` == "男"
pickgirl <-studentHeights$`類別` == "女"
pickboy6 <- pick6to8 & pickboy
View(studentHeights)
pickboy <-studentHeights$`類別` == "男"
pickgirl <-studentHeights$`類別` == "女"
pickboy6 <- pick6to8 & pickboy
pickgirl6 <- pick6to8 & pickgirl
pickboy9 <- pick9to12 & pickboy
pickgirl9 <- pick9to12 & pickgirl
pickboy13 <- pick13to15 & pickboy
pickgirl13 <- pick13to15 & pickgirl
heightDifferenceByGroup <- c(
mean(studentHeights$`平均身高`[pickboy6])-mean(studentHeights$`平均身高`[pickgirl6]),
mean(studentHeights$`平均身高`[pickboy9])-mean(studentHeights$`平均身高`[pickgirl9]),
mean(studentHeights$`平均身高`[pickboy13])-mean(studentHeights$`平均身高`[pickgirl13])
)
heightDifferenceByGroup
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
str(differentMajors)
table(differentMajors)
realEstateRegex <-  "不動產?與?城?鄉?環?境?學?系"
# realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
table(differentMajors)
table(str_replace(differentMajors,realEstateRegex,"不動系"))
differentMajors <- factor(differentMajors)
currentLevels <- levels(differentMajors)
currentLevels
bSchoolRegex <-"(休閒與運動管理學系|休運系|金融與合作經營學系|金融與合作學系|金融系)"
# bSchoolRegex
str_replace(currentLevels,bSchoolRegex,"商學院")
table(differentMajors)
peRegex <- "(休閒與運動管理學系|休運系)"
ecoRegex <-"(經濟系|經濟學系)"
finRegex <-"(金融系|金融與合作經營學系|金融與合作學系)"
socRegex <-"(社會系|社會學系)"
swRegex <-"(社工系|社會工作學系)"
pubRegex <-"(公共行政系|公共行政暨政策學系)"
differentMajors <-
str_replace(differentMajors,peRegex,"休運系")
differentMajors <-
str_replace(differentMajors,ecoRegex,"經濟系")
differentMajors <-
str_replace(differentMajors,finRegex,"金融系")
differentMajors <-
str_replace(differentMajors,socRegex,"社會系")
differentMajors <-
str_replace(differentMajors,swRegex,"社工系")
differentMajors <-
str_replace(differentMajors,pubRegex,"公行系")
differentMajors <-
str_replace(differentMajors,realEstateRegex,"不動系")
differentMajors
table(differentMajors)
majorfactor <- factor(differentMajors)
levels(majorfactor)
# school
school <- levels(majorfactor)
names(school) <- c("公共事務學院","公共事務學院","商學院","社科院","社科院","商學院","社科院")
school
school <- factor(school)
school
levels(school)
school <- c("公共事務學院","公共事務學院","商學院","社科院","社科院","商學院","社科院")
school <- factor(school)
school
school <- factor(differentMajors)
levels(school) <- c("公共事務學院","公共事務學院","商學院","社科院","社科院","商學院","社科院")
school
levels(school)
