mention_duan
unlist_mention_duan <-unlist(mention_duan)
table_duan <- table(unlist_mention_duan)
table_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]],"姓?段(譽|兄弟|兄|大哥|相公|君|的小子)(?=[^弟])"
)
mention_duan
unlist_mention_duan <-unlist(mention_duan)
table_duan <- table(unlist_mention_duan)
table_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]],"姓?段(譽|兄|兄弟|大哥|相公|君|的小子)(?=[^弟])"
)
mention_duan
unlist_mention_duan <-unlist(mention_duan)
table_duan <- table(unlist_mention_duan)
table_duan
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
View(studentHeights)
str(studentHeights)
studentHeights$年齡
studentHeights$學年度 <- factor(studentHeights$學年度)
class(studentHeights$學年度)
studentHeights$學年度 <- factor(studentHeights$學年度,ordered=T)
studentHeights$學年度 <- factor(studentHeights$學年度,ordered=TRUE)
class(studentHeights)
class(studentHeights$學年度)
studentHeights[[1]]
studentHeights$`學年度`  <- factor(studentHeights$學年度,ordered=TRUE)
studentHeights["學年度"]  <- factor(studentHeights["學年度"],ordered=TRUE)
studentHeights[["學年度"]]  <- factor(studentHeights[["學年度"]],ordered=TRUE)
studentHeights[["學年度"]]
studentHeights["學年度"]
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights["學年度"]  <- factor(studentHeights["學年度"],ordered=TRUE)
# studentHeights
studentHeights["學年度"]
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$學年度  <- factor(studentHeights$學年度,ordered=TRUE)
studentHeights$學年度  <-  factor(studentHeights$學年度 ,ordered=TRUE)
# studentHeights
studentHeights$`學年度`  <-  factor(studentHeights$`學年度` ,ordered=TRUE)
# studentHeights
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$`學年度`  <-  factor(studentHeights$`學年度` ,ordered=TRUE)
# studentHeights
studentHeights$`學年度`
levels(studentHeights$學年度)
sort(studentHeights$學年度)
levels_schoolyear <-levels(studentHeights$`學年度`)
studentHeights$`學年度` <- as.integer(studentHeights$`學年度`)
names(studentHeights$`學年度`) <-levels_schoolyear
studentHeights$`學年度` <-sort(studentHeights$`學年度`)
studentHeights$`學年度`  <-  factor(studentHeights$`學年度`,names(studentHeights$`學年度`),ordered=TRUE)
# studentHeights
levels(studentHeights$`學年度`)
levels(studentHeights$`學年度`)
studentHeights$`學年度`
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
levels_schoolyear <-levels(studentHeights$`學年度`)
studentHeights$`學年度` <- as.integer(studentHeights$`學年度`)
names(studentHeights$`學年度`) <-levels_schoolyear
studentHeights$`學年度` <-sort(studentHeights$`學年度`)
studentHeights$`學年度`  <-  factor(studentHeights$`學年度`,names(studentHeights$`學年度`),ordered=TRUE)
# studentHeights
studentHeights$`學年度`
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
levels_schoolyear <-levels(studentHeights$`學年度`)
levels_schoolyear
levels_schoolyear <-levels(studentHeights$`學年度`)
levels_schoolyear
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
levels(studentHeights$`學年度`)
studentHeights$`學年度`
class(studentHeights$`學年度`)
str(studentHeights$`學年度`)
levels(studentHeights$`學年度`)
studentHeights$`學年度`
<- as.integer(studentHeights$`學年度`)
levels_schoolyear <-levels(studentHeights$`學年度`)
names(studentHeights$`學年度`) <-levels_schoolyear
studentHeights$`學年度` <-sort(studentHeights$`學年度`)
studentHeights$`學年度`  <-  factor(studentHeights$`學年度`,names(studentHeights$`學年度`),ordered=TRUE)
# studentHeights
studentHeights$`學年度` <- as.integer(studentHeights$`學年度`)
levels_schoolyear <-levels(studentHeights$`學年度`)
names(studentHeights$`學年度`) <-levels_schoolyear
studentHeights$`學年度` <-sort(studentHeights$`學年度`)
studentHeights$`學年度`  <-  factor(studentHeights$`學年度`,names(studentHeights$`學年度`),ordered=TRUE)
# studentHeights
levels_schoolyear <-levels(studentHeights$`學年度`)
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$`學年度` <- as.integer(studentHeights$`學年度`)
levels_schoolyear <-levels(studentHeights$`學年度`)
levels(studentHeights$`學年度`)
as.integer(studentHeights$`學年度`)
levels(studentHeights$`學年度`)
studentHeights$`學年度` <- factor(studentHeights$`學年度` ,ordered=TRUE)
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$`學年度` <- factor(studentHeights$`學年度` ,ordered=TRUE)
levels(studentHeights$`學年度`)
studentHeights$`學年度` <- as.integer(studentHeights$`學年度`)
studentHeights$`學年度` <- factor(studentHeights$`學年度` ,ordered=TRUE)
levels(studentHeights$`學年度`)
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
as.integer(studentHeights$`學年度`)
levels(studentHeights$`學年度`)
studentHeights$`學年度` <- factor(studentHeights$`學年度` ,ordered=TRUE)
levels(studentHeights$`學年度`)
SORT
sort(studentHeights$學年度)
studentHeights$學年度
class(studentHeights$學年度)
studentHeights$`學年度` <- factor(studentHeights$`學年度`)
levels_schoolyear <- levels(studentHeights$`學年度`)
studentHeights$`學年度` <- as.integer(studentHeights$`學年度`)
names(studentHeights$`學年度`) <-levels_schoolyear
studentHeights$`學年度` <-sort(studentHeights$`學年度`)
studentHeights$`學年度`  <-  factor(studentHeights$`學年度`,names(studentHeights$`學年度`),ordered=TRUE)
# studentHeights
levels(studentHeights$)
levels(studentHeights$`學年度`)
sort(studentHeights$`學年度`)
names(studentHeights$`學年度`)
as.integer(studentHeights$`學年度`)
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
factor(studentHeights$`學年度`)
levels(studentHeights$`學年度`)
levels(studentHeights$學年度)
class(studentHeights$`學年度`)
str(levels(studentHeights$`學年度`))
str(studentHeights$`學年度`))
str(studentHeights$`學年度`)
studentHeights$`學年度` <- factor(studentHeights$`學年度`)
levels(studentHeights$`學年度`)
levels_schoolyear <- levels(studentHeights$`學年度`)
as.integer(studentHeights$`學年度`)
names(studentHeights$`學年度`) <-levels_schoolyear
sort(studentHeights$`學年度`)
studentHeights$`學年度` <- factor(studentHeights$`學年度`)
levels_schoolyear <- levels(studentHeights$`學年度`)
studentHeights$`學年度` <- as.integer(studentHeights$`學年度`)
names(studentHeights$`學年度`) <-levels_schoolyear
studentHeights$`學年度` <-sort(studentHeights$`學年度`)
studentHeights$`學年度`  <-  factor(studentHeights$`學年度`,names(studentHeights$`學年度`),ordered=TRUE)
# studentHeights
levels(studentHeights$`學年度`)
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$`學年度` <- as.integer(studentHeights$`學年度`)
studentHeights$`學年度`  <-  factor(studentHeights$`學年度`,ordered=TRUE)
levels(studentHeights$`學年度`)
class(studentHeights$`學年度`)
studentHeights$`年齡` <- as.integer(studentHeights$`年齡`)
studentHeights$`年齡`  <-  factor(studentHeights$`年齡`,ordered=TRUE)
levels(studentHeights$`年齡`)
class(studentHeights$`年齡`)
studentHeights$`年齡層` <- factor(studentHeights$`年齡層`,ordered=TRUE)
levels(studentHeights$`年齡層`)
level_age <- c(6-8,9-12,13-15)
studentHeights$`年齡層` <- factor(studentHeights$`年齡層`,level_age,ordered=TRUE)
# studentHeights$`年齡層`
levels(studentHeights$`年齡層`)
level_age <- c("6-8","9-12","13-15")
studentHeights$`年齡層` <- factor(studentHeights$`年齡層`,level_age,ordered=TRUE)
# studentHeights$`年齡層`
levels(studentHeights$`年齡層`)
class(studentHeights$`年齡層`)
level_age <- c("6-8","9-12","13-15")
studentHeights$`年齡層` <- factor(studentHeights$`年齡層`,level_age,ordered=TRUE)
studentHeights$`年齡層`
pick6to8 <- studentHeights$`年齡層` == "6-8"
pick6to8
pick6to8 <- studentHeights$`年齡層` == "6-8"
pick9to12 <- studentHeights$`年齡層` == "9-12"
pick13to15 <- studentHeights$`年齡層` == "13-15"
averageHeightByGroup <- c(mean(studentHeights$`年齡層`[pick6to8])
,mean(studentHeights$`年齡層`[pick9to12])
,mean(studentHeights$`年齡層`[pick13to15])
)
averageHeightByGroup
studentHeights$`年齡層`[pick6to8]
pick6to8 <- studentHeights$`年齡層` == "6-8"
pick9to12 <- studentHeights$`年齡層` == "9-12"
pick13to15 <- studentHeights$`年齡層` == "13-15"
averageHeightByGroup <- c(mean(studentHeights$`平均身高`[pick6to8])
,mean(studentHeights$`平均身高`[pick9to12])
,mean(studentHeights$`平均身高`[pick13to15])
)
averageHeightByGroup
class(averg)
class(averageHeightByGroup)
names(averageHeightByGroup) <- level_age
averageHeightByGroup
class(averageHeightByGroup)
pickboy6 <- studentHeights$`類別`[pick6to8] =="男"
pickgirl6 <- studentHeights$`類別`[pick6to8] =="女"
pickboy9 <- studentHeights$`類別`[pick9to12] =="男"
pickgirl9 <- studentHeights$`類別`[pick9to12] =="女"
pickboy13 <- studentHeights$`類別`[pick13to15] =="男"
pickgirl13 <- studentHeights$`類別`[pick13to15] =="女"
heightDifferenceByGroup <- c(
mean(studentHeights$`平均身高`[pickboy6])-mean(studentHeights$`平均身高`[pickgirl6])
)
# heightDifferenceByGroup
heightDifferenceByGroup
pickboy6 <- studentHeights$`類別`[pick6to8] =="男"
pickgirl6 <- studentHeights$`類別`[pick6to8] =="女"
pickboy9 <- studentHeights$`類別`[pick9to12] =="男"
pickgirl9 <- studentHeights$`類別`[pick9to12] =="女"
pickboy13 <- studentHeights$`類別`[pick13to15] =="男"
pickgirl13 <- studentHeights$`類別`[pick13to15] =="女"
heightDifferenceByGroup <- c(
mean(studentHeights$`平均身高`[pickboy6])-mean(studentHeights$`平均身高`[pickgirl6]),
mean(studentHeights$`平均身高`[pickboy9])-mean(studentHeights$`平均身高`[pickgirl9]),
mean(studentHeights$`平均身高`[pickboy13])-mean(studentHeights$`平均身高`[pickgirl13])
)
heightDifferenceByGroup
mean(studentHeights$`平均身高`[pickboy6])
mean(studentHeights$`平均身高`[pickgirl6])
mean(studentHeights$`平均身高`[pickboy9])
mean(studentHeights$`平均身高`[pickboy13])
studentHeights$`類別`[pick6to8]
c(T,T,F,F) %% c(T,F,T,F)
c(T,T,F,F) == c(T,F,T,F)
studentHeights$`平均身高`[pickboy6]
studentHeights$`平均身高`[pickboy9]
pickboy6
averageHeightByGroup
studentHeights$`類別`[pick6to8]
studentHeights$`類別`[pick9to12]
c(T,T,F,F) | c(T,F,T,F)
c(T,T,F,F) & c(T,F,T,F)
pickboy <-studentHeights$`類別` == "男"
pickgirl <-studentHeights$`類別` == "女"
pickboy6 <- pick6to8 & pickboy
View(studentHeights)
pickboy <-studentHeights$`類別` == "男"
pickgirl <-studentHeights$`類別` == "女"
pickboy6 <- pick6to8 & pickboy
pickgirl6 <- pick6to8 & pickgirl
pickboy9 <- pick9to12 & pickboy
pickgirl9 <- pick9to12 & pickgirl
pickboy13 <- pick13to15 & pickboy
pickgirl13 <- pick13to15 & pickgirl
heightDifferenceByGroup <- c(
mean(studentHeights$`平均身高`[pickboy6])-mean(studentHeights$`平均身高`[pickgirl6]),
mean(studentHeights$`平均身高`[pickboy9])-mean(studentHeights$`平均身高`[pickgirl9]),
mean(studentHeights$`平均身高`[pickboy13])-mean(studentHeights$`平均身高`[pickgirl13])
)
heightDifferenceByGroup
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
str(differentMajors)
table(differentMajors)
realEstateRegex <-  "不動產?與?城?鄉?環?境?學?系"
# realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
table(differentMajors)
table(str_replace(differentMajors,realEstateRegex,"不動系"))
differentMajors <- factor(differentMajors)
currentLevels <- levels(differentMajors)
currentLevels
bSchoolRegex <-"(休閒與運動管理學系|休運系|金融與合作經營學系|金融與合作學系|金融系)"
# bSchoolRegex
str_replace(currentLevels,bSchoolRegex,"商學院")
table(differentMajors)
peRegex <- "(休閒與運動管理學系|休運系)"
ecoRegex <-"(經濟系|經濟學系)"
finRegex <-"(金融系|金融與合作經營學系|金融與合作學系)"
socRegex <-"(社會系|社會學系)"
swRegex <-"(社工系|社會工作學系)"
pubRegex <-"(公共行政系|公共行政暨政策學系)"
differentMajors <-
str_replace(differentMajors,peRegex,"休運系")
differentMajors <-
str_replace(differentMajors,ecoRegex,"經濟系")
differentMajors <-
str_replace(differentMajors,finRegex,"金融系")
differentMajors <-
str_replace(differentMajors,socRegex,"社會系")
differentMajors <-
str_replace(differentMajors,swRegex,"社工系")
differentMajors <-
str_replace(differentMajors,pubRegex,"公行系")
differentMajors <-
str_replace(differentMajors,realEstateRegex,"不動系")
differentMajors
table(differentMajors)
majorfactor <- factor(differentMajors)
levels(majorfactor)
# school
school <- levels(majorfactor)
names(school) <- c("公共事務學院","公共事務學院","商學院","社科院","社科院","商學院","社科院")
school
school <- factor(school)
school
levels(school)
school <- c("公共事務學院","公共事務學院","商學院","社科院","社科院","商學院","社科院")
school <- factor(school)
school
school <- factor(differentMajors)
levels(school) <- c("公共事務學院","公共事務學院","商學院","社科院","社科院","商學院","社科院")
school
levels(school)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
jsonlite::fromJSON("https://quality.data.gov.tw/dq_download_json.php?nid=6020&md5_url=ceedea8b44b88a1bf46b48ab84b8742c", simplifyDataFrame = F) -> cpiByIncome
View(cpiByIncome)
str(cpiByIncome)
cpiByIncome[[1]]
names(cpiByIncome[[1]])
names(cpiByIncome[[1]]) -> names_element1
# names_element1
jsonlite::fromJSON("https://quality.data.gov.tw/dq_download_json.php?nid=6020&md5_url=ceedea8b44b88a1bf46b48ab84b8742c", simplifyDataFrame = F) -> cpiByIncome
names(cpiByIncome[[1]]) -> names_element1
# names_element1
map(cpiByIncome,~.x$Item) %>%
unlist(.) %>%
factor(.) -> items
items
list_items <- map(cpiByIncome, ~ .x$Item)
items <- unlist(list_items)
items %>% factor() -> items
items
items -> family_type
levels(family_type) -> currentLevels
str_extract(currentLevels,"[:graph:]+(?=#)") -> newLevels
newLevels
levels(family_type)
family_type <- items
levels(family_type) -> family_type_level_original
str_extract(family_type_level_original,"[:graph:]+(?=#)") -> family_type_level
levels(family_type) <-family_type_level
family_type <-factor(
family_type,
levels =c("全體家庭","最低20%所得家庭","中間60%所得家庭","最高20%所得家庭")
)
family_type
items -> family_type
levels(family_type) -> currentLevels
str_extract(currentLevels,"[:graph:]+(?=#)") -> newLevels
newLevels -> levels(family_type)
family_typea <- factor(family_type, levels=c("全體家庭","最低20%所得家庭","中間60%所得家庭", "最高20%所得家庭"))
family_typea
subcategory <- items
levels(subcategory) -> subcategory_level_original
str_extract(subcategory_level_original,"(?<=#)[:graph:]+(?=()")
str_extract(subcategory_level_original,"(?<=#)[:graph:]+")
str_extract(subcategory_level_original,"(?<=#)[:graph:]+(?=[:punct:])")
str_extract(subcategory_level_original,"(?<=#)[:graph:]+(?=\()")
str_extract(subcategory_level_original,"(?<=#)[:graph:]+(?=\\()")
str_extract(subcategory_level_original,"(?<=#)[:graph:]+(?=\\()") -> subcategory_extract
sort( subcategory_extract ,decreasing=T)
sort(subcategory_extract)
subcategory_extract
subcategory <- items
levels(subcategory) -> subcategory_level_original
str_extract(subcategory_level_original,"(?<=#)[:graph:]+(?=\\()") -> subcategory_extract
levels(subcategory) <-subcategory_level
subcategory
subcategory <- items
levels(subcategory) -> subcategory_level_original
str_extract(subcategory_level_original,"(?<=#)[:graph:]+(?=\\()") -> subcategory_level
levels(subcategory) <-subcategory_level
subcategory
items -> subcategory
levels(subcategory) -> currentLevels
str_extract(currentLevels,"(?<=#)[:graph:]+(?=\\()") -> newLevels
newLevels -> levels(subcategory)
# subcategory
items -> subcategory
levels(subcategory) -> currentLevels
str_extract(currentLevels,"(?<=#)[:graph:]+(?=\\()") -> newLevels
newLevels -> levels(subcategory)
subcategory
namedVector[chnNumberLevels]
levels(subcategory) -> currentLevels
str_extract(currentLevels, "([:graph:]+(?=\\.)|總指數)") -> chnNumberLevels
chineseNumbers <- "一二三四五六七"
unlist(str_split(chineseNumbers,"")) -> chnVector
namedVector <- 1:8
names(namedVector) <- c(chnVector,"總指數")
chnNumberLevels
namedVector[chnNumberLevels] -> namedVector2
names(namedVector2) <- currentLevels
subcategory <- factor(subcategory, levels=names(sort(namedVector2)))
# subcategory
namedVector
namedVector[chnNumberLevels]
str_split("我們的愛情怎麼能這樣","")
str(str_split("我們的愛情怎麼能這樣",""))
one <- 1:5
one
str(one)
map(cpiByIncome,~.x$TYPE=="原始值") -> pick_values
map(cpiByIncome,~.x$TYPE=="原始值") -> checksvalue
map(cpiByIncome,~.x$TYPE=="原始值") -> checksvalue
unlist(checksvalue) ->pick_values
cpivalues <- cpiByIncome[pick_values]
# cpiValues
str(cpivalues)
map(cpivalues,~.x$TIME_PERIOD) %>%
paste0(.,"-01") %>%
ymd(.) -> timedata
map(cpivalues,~.x$Item_VALUE) %>%
as.numeric() -> value_numeric
allCPIdata <- list(
TIME_PERIOD= timedata,
Item_VALUE= value_numeric,
family_type=family_type[pick_values],
subcategory =subcategory[[pick_values]]
)
# allCPIdata
map(cpivalues,~.x$TIME_PERIOD) %>%
paste0(.,"-01") %>%
ymd(.) -> timedata
map(cpivalues,~.x$Item_VALUE) %>%
as.numeric() -> value_numeric
allCPIdata <- list(
TIME_PERIOD= timedata,
Item_VALUE= value_numeric,
family_type=family_type[pick_values],
subcategory =subcategory[pick_values]
)
# allCPIdata
allCPIdata
items -> family_type
levels(family_type) -> currentLevels
str_extract(currentLevels,"[:graph:]+(?=#)") -> newLevels
newLevels -> levels(family_type)
family_type <- factor(family_type, levels=c("全體家庭","最低20%所得家庭","中間60%所得家庭", "最高20%所得家庭"))
family_type
items -> subcategory
levels(subcategory) -> currentLevels
str_extract(currentLevels,"(?<=#)[:graph:]+(?=\\()") -> newLevels
newLevels -> levels(subcategory)
#subcategory
levels(subcategory) -> currentLevels
str_extract(currentLevels, "([:graph:]+(?=\\.)|總指數)") -> chnNumberLevels
chineseNumbers <- "一二三四五六七"
unlist(str_split(chineseNumbers,"")) -> chnVector
namedVector <- 1:8
names(namedVector) <- c(chnVector,"總指數")
chnNumberLevels
namedVector[chnNumberLevels] -> namedVector2
names(namedVector2) <- currentLevels
subcategory <- factor(subcategory, levels=names(sort(namedVector2)))
# subcategory
map(cpiByIncome, ~.x$TYPE=="原始值") -> check_step
unlist(check_step) -> pick_values
cpiByIncome[pick_values] -> cpiValues
# cpiValues
allCPIdata <-
list(
TIME_PERIOD=cpiValues %>% map(~.x$TIME_PERIOD),
Item_VALUE=cpiValues %>% map(~.x$Item_VALUE)
)
map(allCPIdata, unlist) -> allCPIdata
allCPIdata$TIME_PERIOD %>% paste0("-01") %>%
ymd() -> allCPIdata$TIME_PERIOD
allCPIdata$Item_VALUE %>% as.numeric ->
allCPIdata$Item_VALUE
allCPIdata$family_type=family_type[pick_values]
allCPIdata$subcategory=subcategory[pick_values]
# allCPIdata
allCPIdata
map(cpivalues,~.x$TIME_PERIOD) %>%
paste0(.,"-01") %>%
ymd(.) -> timedata
map(cpivalues,~.x$Item_VALUE) %>%
as.numeric() -> value_numeric
allCPIdata <- list(
TIME_PERIOD= timedata,
Item_VALUE= value_numeric,
family_type=family_type[pick_values],
subcategory =subcategory[pick_values]
)
# allCPIdata
allCPIdata
pick_totalCPI <- allCPIdata2$subcategory == "總指數"
pick_date <- (allCPIdata$TIME_PERIOD >= ymd("2011-01-01") &
allCPIdata$TIME_PERIOD <= ymd("2018-12-01"))
map(allCPIdata, ~.x[pick_date]) -> allCPIdata2
# allCPIdata2
pick_totalCPI <- allCPIdata2$subcategory == "總指數"
map(allCPIdata2, ~.x[pick_totalCPI]) -> allCPIdata2
levels(allCPIdata2$family_type) %>%
map(~allCPIdata2$family_type==.x) -> pick_family
names(pick_family) <- levels(allCPIdata2$family_type)
pick_family %>%
map(~allCPIdata2$Item_VALUE[.x]) ->
cpi_eachFamily
length(cpi_eachFamily$`中間60%所得家庭`)
cpi_eachFamily
allC
allCPIdata2
levels(allCPIdata2$family_type)
levels(allCPIdata2$family_type) %>%
map(~allCPIdata2$family_type==.x) -> pick_family
pick_family
names(pick_family) <- levels(allCPIdata2$family_type)
pick_family
pick_family %>%
map(~allCPIdata2$Item_VALUE[.x]) ->
cpi_eachFamily
cpi_eachFamily
