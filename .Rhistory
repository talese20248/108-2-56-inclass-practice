sum(str_detect(badEmployers$dt, "/05/")),
sum(str_detect(badEmployers$dt, "/06/")),
sum(str_detect(badEmployers$dt, "/07/")),
sum(str_detect(badEmployers$dt, "/08/")),
sum(str_detect(badEmployers$dt, "/09/")),
sum(str_detect(badEmployers$dt, "/10/")),
sum(str_detect(badEmployers$dt, "/11/")),
sum(str_detect(badEmployers$dt, "/12/")))
popularSentenceMonth <-"11"
popularSentenceMonth
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
View(table)
str(table)
levels(table$國文)
ordered(table$級分)
ordered(table$級分)
ordered(table$國文)
degree <- ordered(table$`級分`)
chinesegrade <-ordered(table$`國文`)
# chinese
table$`級分`
table$`級分`+1
?paste0
paste0(table$`級分`,table$`國文`)
ordered(table$`國文`)
chinesedegree <-ordered(table$`國文`)
factor(chinesedegree)
factor(!chinesedegree)
oo = factor(chinesedegree)+1
1+1
chinesedegree <-ordered(table$`國文`)
factor(chinesedegree)
# chinese
levels(table$`國文`)
```{r ans21}
ordered(table$`國文`)
levels(table$`國文`)
levels(table$`國文`)
ordered(table$`國文`)
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
levels(table$`國文`)
table$`國文`
levels_new <- c(table$`國文`[c(16:1)])
levels_new <- c(table$`國文`[c(16:1)])
factor(
table$`國文`,
levels=levels_new,
ordered = T # 設定為可排序factor
)
# chinese
levels_new <- c(table$`國文`[c(1:16)])
factor(
table$`國文`,
levels=levels_new,
ordered = T # 設定為可排序factor
)
# chinese
levels(table$國文)
levels_new
levels_new <- c(table$`國文`[c(1:16)])
levels_new
!levels_new
!levels_new
levels_new <- c(table$`國文`[c(1:16)])
chinese <-
factor(
table$`國文`,
levels=table$`級分`+1,
ordered = T # 設定為可排序factor
)
# chinese
table$`級分`+1
levels_new <- c(table$`國文`[c(1:16)])
chinese <-
factor(
table$`國文`,
levels=table$`級分` +1,
ordered = T # 設定為可排序factor
)
# chinese
chinese
factor(table$國文)
levels_new <- c(table$`國文`[c(1:16)])
chinese <-
factor(
table$`國文`,
levels=table$`國文`[c(16:1)],
ordered = T # 設定為可排序factor
)
# chinese
chinese
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
chinese <-
factor(
table$`國文`,
levels=table$`國文`[c(16:1)],
ordered = T # 設定為可排序factor
)
chinese
table$`國文` <-as.factor(table$`國文`)
table$`國文` <- as.factor(table$`國文`)
levels(table$`國文`)
levels(table$`國文`)
table$`國文` <- as.factor(table$`國文`)
levelchinese <- levels(table$`國文`)
levels_new <- c(levelchinese[c(16:1)])
levels_new
#chinese
levels_chinese
levels_\chinese
levelschinese
levelchinese
table$`國文` <- as.factor(table$`國文`)
chinese <- levels(table$`國文`)
chinese
View(students10)
str(students10)
ntpu_namelist <-
students10$`姓名`[str_detect(students10$`志願`),`北大`]
ntpu_namelist <-
students10$`姓名`[c(str_detect(students10$`志願`),`北大`)]
ntpu_namelist <-
students10$`姓名`[str_detect(students10$`志願`,`北大`)]
ntpu_namelist <-
students10$`姓名`[str_detect(students10$`志願`,"北大")]
# ntpu_namelist
ntpu_namelist
students10[["志願"]]
class(students10$`國文`)
str_detect(students10$`志願`,"北大")
students10$`國文` >= 12
students10$`國文`  >= 12
students10$`英文`+ students10$`數學`
engplusmath<- students10$`英文`+ students10$`數學`
engplusmath >=26
str_detect(students10$`志願`,"北大")
students10$`國文`  >= 12
engplusmath<- students10$`英文`+ students10$`數學`
engplusmath >=26
# ntpu_econtpu_eco
first+second+third
first <- str_detect(students10$`志願`,"北大")
second <- students10$`國文`  >= 12
engplusmath<- students10$`英文`+ students10$`數學`
third <- engplusmath >=26
first+second+third
# ntpu_econtpu_eco
total <-first+second+third
ntpu_econtpu_eco <- students10$`姓名`[total=3]
ntpu_econtpu_eco
total
total=3
total==3
total <-first+second+third
total==3
ntpu_econtpu_eco <- students10$`姓名`[total==3]
ntpu_econtpu_eco
students10[["姓名"]]
total
namelist
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
View(params)
View(table)
View(students10)
table$`國文` <- as.factor(table$`國文`)
chinese <- levels(table$`國文`)
chinese
ntpu_namelist <-
students10$`姓名`[str_detect(students10$`志願`,"北大")]
ntpu_namelist
first <- str_detect(students10$`志願`,"北大")
second <- students10$`國文`  >= 12
engplusmath<- students10$`英文`+ students10$`數學`
third <- engplusmath >=26
total <-first+second+third
ntpu_econtpu_eco <- students10$`姓名`[total==3]
ntpu_econtpu_eco
students10$`姓名` %in% namelist
students10$`姓名`[students10$`姓名` %in% namelist]
congrats <-
paste0("恭喜",
students10$`姓名`[students10$`姓名` %in% namelist],
"同學錄取國立臺北大學經濟系"
)
congrats
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
mostViolatedArticle <-
table_countsByArticle[table_countsByArticle==max(table_countsByArticle)]
mostViolatedArticle
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
table_lawcontent <-table(badEmployers$lawContent)
mostViolatedArticle_content <- names(table_lawcontent[table_lawcontent==max(table_lawcontent)])
mostViolatedArticle_content
class(mostViolatedArticle)
poppular_month <-max(sum(str_detect(badEmployers$dt, "/01/")),
sum(str_detect(badEmployers$dt, "/02/")),
sum(str_detect(badEmployers$dt, "/03/")),
sum(str_detect(badEmployers$dt, "/04/")),
sum(str_detect(badEmployers$dt, "/05/")),
sum(str_detect(badEmployers$dt, "/06/")),
sum(str_detect(badEmployers$dt, "/07/")),
sum(str_detect(badEmployers$dt, "/08/")),
sum(str_detect(badEmployers$dt, "/09/")),
sum(str_detect(badEmployers$dt, "/10/")),
sum(str_detect(badEmployers$dt, "/11/")),
sum(str_detect(badEmployers$dt, "/12/")))
popularSentenceMonth <-"11"
popularSentenceMonth
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
table$`國文` <- as.factor(table$`國文`)
chinese <- levels(table$`國文`)
chinese
ntpu_namelist <-
students10$`姓名`[str_detect(students10$`志願`,"北大")]
ntpu_namelist
first <- str_detect(students10$`志願`,"北大")
second <- students10$`國文`  >= 12
engplusmath<- students10$`英文`+ students10$`數學`
third <- engplusmath >=26
total <-first+second+third
ntpu_econtpu_eco <- students10$`姓名`[total==3]
ntpu_econtpu_eco
congrats <-
paste0("恭喜",
students10$`姓名`[students10$`姓名` %in% namelist],
"同學錄取國立臺北大學經濟系"
)
congrats
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
twoNames <- "有人叫他段兄，但也有有人叫他段兄弟，最常...."
str_extract_all(twoNames, "段(兄|兄弟)")
twoNames <- "有人叫他段兄，但也有有人叫他段兄弟，最常...."
str_extract_all(twoNames, "段兄|段兄弟)")
twoNames <- "有人叫他段兄，但也有有人叫他段兄弟，最常...."
str_extract_all(twoNames, "(段兄|段兄弟)")
twoNames <- "有人叫他段兄，但也有有人叫他段兄弟，最常...."
str_extract_all(twoNames, "(段兄弟|段兄)")
twoNames <- "有人叫他段兄，但也有有人叫他段兄弟，最常...."
str_extract_all(twoNames, "段(兄|兄弟)")
twoNames
print(twoNames)
View(twoNames)
View(params)
View(params)
str_view(twoNames,"段(兄|兄弟)")
str_view(twoNames,"段(兄|兄弟)")
str_view_all(twoNames,"段(兄|兄弟)")
install.packages("htmlwidgets")
str_view_all(twoNames,"段(兄|兄弟)")
# back_regex
str_view_all(twoNames,"段(兄|兄弟)")
# back_regex
str_view(twoNames,"段(兄|兄弟)")
# back_regex
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
str_view(twoNames,"段(兄|兄弟)")
# back_regex
library(htmlwidgets)
str_view(twoNames,"段(兄|兄弟)")
# back_regex
detach("package:htmlwidgets", unload = TRUE)
str_view(twoNames,"段(兄|兄弟)")
# back_regex
back_regex <- "(?=[^弟])"
back_regex
pattern <- paste0("段(兄|兄弟)",back_regex)
str_extract_all(twoNames, pattern)
jsonlite::fromJSON("https://www.dropbox.com/s/kv0xa0spa6q5l7q/semiGodsSemiDevils.json?dl=1") -> semiGodsSemiDevils
View(semiGodsSemiDevils)
View(semiGodsSemiDevils)
View(semiGodsSemiDevils)
str(semiGodsSemiDevils)
context_picked <- semiGodsSemiDevils[data][[section]][[P2]]
context_picked <- semiGodsSemiDevils[data][section][[P2]]
context_picked <- semiGodsSemiDevils["data"]["section"][["P2"]]
context_picked <- semiGodsSemiDevils["data"]["section"]
context_picked <- semiGodsSemiDevils[[data]][section]
context_picked <- semiGodsSemiDevils[[data]]
context_picked <- semiGodsSemiDevils[data]
context_picked <- semiGodsSemiDevils["data"]
context_picked
View(context_picked)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/kv0xa0spa6q5l7q/semiGodsSemiDevils.json?dl=1") -> semiGodsSemiDevils
View(semiGodsSemiDevils)
View(semiGodsSemiDevils[[5]][[1]])
p2pick <- semiGodsSemiDevils$data == "P2"
p2pick <- semiGodsSemiDevils$data$section == "P2"
str(semiGodsSemiDevils)
str(semiGodsSemiDevils$data)
semiGodsSemiDevils$data[[2]]
semiGodsSemiDevils$data$section
str_detect(semiGodsSemiDevils$data,"P2")
semiGodsSemiDevils$data$section
str_detect(semiGodsSemiDevils$data,"P2")
p2pick <- semiGodsSemiDevils$data[[1]]$section == "P2"
p2pick <- semiGodsSemiDevils$data[[1]]$section == "P2"
context_picked <- semiGodsSemiDevils$data[[1]]$text
context_picked
context_picked <- semiGodsSemiDevils$data[[1]]$text[[p2pick]]
context_picked <- semiGodsSemiDevils$data[[1]]$text[p2pick]
context_picked
textExample <- c("段1......。　　段2....。")
context_picked_split <-
str_split(context_picked,(?="\\s\\s"))
context_picked_split <-
str_split(context_picked,(?="\\s"))
context_picked_split <-
str_split(context_picked,(?= `\\s`))
str_split(context_picked,(?=[`\\s`])
context_picked_split <-
str_split(context_picked,"(?=`\\s`)")
str(context_picked_split)
# context_picked_split
context_picked_split <-
str_split(context_picked,"(?=`\\s\\s`)")
str(context_picked_split)
# context_picked_split
context_picked_split <-
str_split(context_picked,"(?=`。\\s\\s`)")
str(context_picked_split)
# context_picked_split
context_picked_split <-
str_split(context_picked,"(?=`。\\s\\s`)")
str(context_picked_split)
# context_picked_split
context_picked_split <-
str_split(context_picked,"(?=`\\s\\s`)")
str(context_picked_split)
# context_picked_split
context_picked_split <-
str_split(context_picked,"(?<=`\\s\\s`)")
str(context_picked_split)
# context_picked_split
context_picked_split <-
str_split_fixed(context_picked,"(?<=`\\s\\s`)")
context_picked_split <-
str_split(context_picked,"(?=`\\s\\s`)")
str(context_picked_split)
# context_picked_split
context_picked_split
context_picked_split <-
str_split(context_picked,"\\s\\s")
str(context_picked_split)
# context_picked_split
mention_duan <-str_extract_all(
context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|及姓段的小子)")
mention_duan
mention_duan <-str_extract_all(
context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|及姓段的小子)")
mention_duan
mention_duan <-str_extract_all(
context_picked_split[1:124],"(段譽|段兄|段兄弟|段大哥|段相公|段君|及姓段的小子)")
mention_duan
mention_duan <-str_extract_all(
context_picked_split[1],"(段譽|段兄|段兄弟|段大哥|段相公|段君|及姓段的小子)")
mention_duan
mention_duan <-str_extract_all(
context_picked_split,"(?<=段)")
mention_duan
mention_duan <-str_extract_all(
context_picked_split[1],"(?<=段)")
mention_duan
str(context_picked_split)
mention_duan <-str_extract_all(
context_picked_split[[1]][1:124],"(?<=段)")
mention_duan
mention_duan <-str_extract_all(
context_picked_split[[1]][1:124],"(?<=`段`)")
mention_duan
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(?<=段)[:graph:]+")
mention_duan
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(?<=段)[:graph:]{1,2}")
mention_duan
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(段譽|段兄|段兄弟|段大哥|段相公|段君|及姓段的小子)")
mention_duan
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(段兄|段兄弟|段大哥|段相公|段君|及姓段的小子)")
mention_duan
beforeduan <- "姓"
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(?<=beforeduan){0,1}段[:graph:]{1,2,3}")
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(?<=beforeduan){0,1}段[:graph:]{1,2,3}")
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(?<=beforeduan){0,1}段[:graph:]{1,2,3}"
)
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓?段[:graph:]{1,2,3}"
)
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓?段"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓?段[:graph:]{1,2,3}"
)
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓?段[:graph:]{1}"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓?段(譽|兄弟|兄|大哥|相公|君|的小子)"
)
mention_duan
str_view_all(mention_duan)
str_view_all(context_picked_split[[1]][1:124],"姓?段(譽|兄弟|兄|大哥|相公|君|的小子)")
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓?段相公"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓段的小子"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(姓段的小子)"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"(段譽)"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"段譽"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓段的"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓段[:graph:]"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"段大哥"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"段相公"
)
mention_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]][1:124],"姓?段(譽|兄弟|兄|大哥|相公|君|的小子)"
)
mention_duan
unlist_mention_duan <-unlist(mention_duan)
table_duan <- table(mention_duan2)
unlist_mention_duan <-unlist(mention_duan)
table_duan <- table(unlist_mention_duan)
table_duan
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]],"姓?段(譽|兄弟|兄|大哥|相公|君|的小子)"
)
mention_duan
unlist_mention_duan <-unlist(mention_duan)
table_duan <- table(unlist_mention_duan)
table_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]],"姓?段(譽|兄弟|兄|大哥|相公|君|的小子)(?=[^弟])"
)
mention_duan
unlist_mention_duan <-unlist(mention_duan)
table_duan <- table(unlist_mention_duan)
table_duan
beforeduan <- "姓"
mention_duan <- str_extract_all(
context_picked_split[[1]],"姓?段(譽|兄|兄弟|大哥|相公|君|的小子)(?=[^弟])"
)
mention_duan
unlist_mention_duan <-unlist(mention_duan)
table_duan <- table(unlist_mention_duan)
table_duan
