post[[5]][[4]][[26]]
post[[5]][[4]]
post[[5]][[4]]
post[[5]][[3]]
post[[5]][[1]][[26]] <-"男"
post[[5]][[2]][[26]] <-ymd_hm("2020-04-25 15:30",tz=Europe/Warsaw)
post[[5]][[1]][[26]] <-"男"
post[[5]][[2]][[26]] <-ymd_hm("2020-04-25 15:30",tz="Europe/Warsaw")
post[[5]][[3]][[26]] <-"心不在課堂上，在哪都做得到遠距。"
post[[5]][[4]][[26]] <-as.numeric(0)
post[[5]] <-post[[4]][[2]]
post[[4]][[2]] <-post[[4]][[-2]]
# post
str(post)
post[[5]][[1]][[26]] <-"男"
datetimenew <-c("2020-04-20 14:50","2020-04-20 14:51" ,"2020-04-20 14:50" ,"2020-04-20 14:51" ,"2020-04-20 15:14" ,"2020-04-20 16:26","2020-04-20 16:36",
"2020-04-20 16:58", "2020-04-20 17:18" ,"2020-04-20 17:29" ,"2020-04-20 17:40", "2020-04-20 22:58" ,"2020-04-20 23:19", "2020-04-20 23:22",
"2020-04-20 23:24", "2020-04-20 23:36" ,"2020-04-20 23:55", "2020-04-21 00:02", "2020-04-21 00:40" ,"2020-04-21 00:51", "2020-04-21 00:56",
"2020-04-21 00:59" ,"2020-04-21 01:00" ,"2020-04-21 07:23", "2020-04-21 09:12")
post[["comments"]][["DateTime"]] <- ymd_hm(datetimenew,tz="Asia/Taipei")
source("https://www.dropbox.com/s/6pzodo4967mc9g4/dcardPost.R?dl=1")
post[[5]][[1]] <- as.factor(post[[5]][[1]])
post[[5]][[4]] <- as.numeric(post[[5]][[4]])
post
datetimenew <-c("2020-04-20 14:50","2020-04-20 14:51" ,"2020-04-20 14:50" ,"2020-04-20 14:51" ,"2020-04-20 15:14" ,"2020-04-20 16:26","2020-04-20 16:36",
"2020-04-20 16:58", "2020-04-20 17:18" ,"2020-04-20 17:29" ,"2020-04-20 17:40", "2020-04-20 22:58" ,"2020-04-20 23:19", "2020-04-20 23:22",
"2020-04-20 23:24", "2020-04-20 23:36" ,"2020-04-20 23:55", "2020-04-21 00:02", "2020-04-21 00:40" ,"2020-04-21 00:51", "2020-04-21 00:56",
"2020-04-21 00:59" ,"2020-04-21 01:00" ,"2020-04-21 07:23", "2020-04-21 09:12")
post[["comments"]][["DateTime"]] <- ymd_hm(datetimenew,tz="Asia/Taipei")
post
post[[5]][[1]][[26]] <-"男"
post[[5]][[2]][[26]] <-ymd_hm("2020-04-25 15:30",tz="Europe/Warsaw")
post[[5]][[3]][[26]] <-"心不在課堂上，在哪都做得到遠距。"
post[[5]][[4]][[26]] <-as.numeric(0)
post
post[[6]] <-post[[5]]
str(post)
post
post[[5]] <
str(post,max.level = 1)
post[[6]] <-comments=list(post[[5]])
post[[6]] <-comments=list(post[[5]])
post[[6]]<-comments=list(post[[5]])
post[[6]] <- comments=list(post[[5]])
post[[6]] <- comments=post[[5]]
post[[6]] <- comments=list(post[[5]])
post[[6]] <- list(post[[5]])
str(post,max.level = 1)
post
post[[6]] <- list(post[[5]])
str(post,max.level = 1)
post[[5]][[1]] <- as.factor(post[[5]][[1]])
post[[5]][[4]] <- as.numeric(post[[5]][[4]])
post
source("https://www.dropbox.com/s/6pzodo4967mc9g4/dcardPost.R?dl=1")
post[[5]][[1]] <- as.factor(post[[5]][[1]])
post[[5]][[4]] <- as.numeric(post[[5]][[4]])
post
post[[6]] <- list(post[[5]])
str(post,max.level = 1)
post[[6]] <-post[[5]]
str(post,max.level = 1)
post[[6]] <-comments=c(post[[5]])
comments=c(post[[5]])
post[[6]] <- comments
str(post,max.level = 1)
list6 <- comments=c(post[[5]])
post[["comments2"]] <- post[["comments"]]
str(post,max.level = 1)
source("https://www.dropbox.com/s/6pzodo4967mc9g4/dcardPost.R?dl=1")
post[["comments2"]] <- post[["comments"]]
str(post,max.level = 1)
source("https://www.dropbox.com/s/6pzodo4967mc9g4/dcardPost.R?dl=1")
post2 <-post
str(post,max.level = 1)
post2 <-post
post2[["category"]] <-post[[4]][[1]]
post2[["dateTime"]] <-post[[4]][[2]]
str(post2,max.level = 1)
post2 <-post
post2[[4]] <-post2[[-4]
post2[["category"]] <-post[[4]][[1]]
post2 <-post
post2[[4]] <-post2[[-4]]
post2 <-post
post2[[4]] <-NULL
post2[["category"]] <-post[[4]][[1]]
post2[["dateTime"]] <-post[[4]][[2]]
str(post2,max.level = 1)
post2 <-post
post2[[4]] <-NULL
post2[[5]] <-NULL
post2[["category"]] <-post[[4]][[1]]
post2[["dateTime"]] <-post[[4]][[2]]
str(post2,max.level = 1)
post2 <-post
str(post2,max.level = 1)
post2 <-post
post2[[4]] <-NULL
post2[[5]] <-NULL
post2[["category"]] <-post[[4]][[1]]
post2[["dateTime"]] <-post[[4]][[2]]
post2[[6]] <-post[[5]]
str(post2,max.level = 1)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
View(badEmployers)
str(badEmployers)
violatedArticles <- factor(badEmployers$law)
# violatedArticles
class(violatedArticles)
violatedArticles <- levels(badEmployers$law)
# violatedArticles
violatedArticles <- unique(badEmployers$law)
# violatedArticles
class(violatedArticles)
table_countsByArticle <-
table(badEmployers$law)
names(table_countsByArticle)
# table_countsByArticle
violatedArticles <- unique(badEmployers$law)
violatedArticles
table_countsByArticle
class(table_countsByArticle)
names(table_countsByArticle)
str(table_countsByArticle)
max(table_countsByArticle)
mostViolatedArticle <-
table_countsByArticle[max(table_countsByArticle)]
# mostViolatedArticle
mostViolatedArticle <-
table_countsByArticle[max(table_countsByArticle)]
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
pickmostViolatedArticle <- max(table_countsByArticle)
mostViolatedArticle <-
table_countsByArticle[pickmostViolatedArticle]
# mostViolatedArticle
names(mostViolatedArticle)
str(table_countsByArticle)
str(table_countsByArticle)
max(table_countsByArticle)
pickmostViolatedArticle <-
table_countsByArticle ==508
mostViolatedArticle <-
table_countsByAricle[pickmostViolatedArticle]
table_countsByArticle
pickmostViolatedArticle <-
table_countsByArticle == 508
mostViolatedArticle <-
table_countsByAricle[pickmostViolatedArticle]
pickmostViolatedArticle <-
table_countsByArticle$table == 508
pickmostViolatedArticle <-
str_detect(table_countsByArticle,508)
pickmostViolatedArticle <-
str_detect(table_countsByArticle,"508")
mostViolatedArticle <-
table_countsByAricle[pickmostViolatedArticle]
table_countsByArticle==508
mostViolatedArticle <-
table_countsByArticle[table_countsByArticle==508]
# mostViolatedArticle
mostViolatedArticle <-
table_countsByArticle[table_countsByArticle==508]
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
mostViolatedArticle <-
table_countsByArticle[table_countsByArticle==max(table_countsByArticle)]
# mostViolatedArticle
mostViolatedArticle <-
table_countsByArticle[table_countsByArticle==max(table_countsByArticle)]
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
table_lawcontent <-table(badEmployers$lawContent)
max(table_lawcontent)
table_lawcontent <-table(badEmployers$lawContent)
mostViolatedArticle_content <- badEmployers$lawContent[table_lawcontent==max(table_lawcontent)]
class(mostViolatedArticle_content)
# mostViolatedArticle_content
str(mostViolatedArticle_content)
max(table_lawcontent)
table(badEmployers$lawContent)
table_lawcontent <-table(badEmployers$lawContent)
mostViolatedArticle_content <- badEmployers$lawContent[table_lawcontent==max(table_lawcontent)]
class(mostViolatedArticle_content)
# mostViolatedArticle_content
mostViolatedArticle_content
badEmployers$lawContent[table_lawcontent==max(table_lawcontent)]
badEmployers$lawContent[table_lawcontent==max(table_lawcontent)]
badEmployers$lawContent[table_lawcontent==max(table_lawcontent)]
badEmployers$lawContent[table_lawcontent==max(table_lawcontent)]
badEmployers$lawContent[table_lawcontent==max(table_lawcontent)]
table_lawcontent <-table(badEmployers$lawContent)
mostViolatedArticle_content <- names(table_lawcontent==max(table_lawcontent))
mostViolatedArticle_content
table_lawcontent <-table(badEmployers$lawContent)
mostViolatedArticle_content <- names(table_lawcontent[table_lawcontent==max(table_lawcontent)])
mostViolatedArticle_content
class(mostViolatedArticle_content)
length(mostViolatedArticle_content)
table_lawcontent <-table(badEmployers$lawContent)
mostViolatedArticle_content <- names(table_lawcontent[table_lawcontent==max(table_lawcontent)])
mostViolatedArticle_content
table(badEmployers$dt)
ymd(badEmployers$dt)
table(ymd(badEmployers$dt))
date(ymd(badEmployers$dt))
class(badEmployers$dt)
str_detect(fruit, "01
")
str_detect(badEmployers$dt, "01")
str_detect(badEmployers$dt, "01$")
str_detect(badEmployers$dt, "-01-")
sum(str_detect(badEmployers$dt, "-01-"))
sum(str_detect(badEmployers$dt, "/01/"))
sum(str_detect(badEmployers$dt, "/02/"))
sum(str_detect(badEmployers$dt, "/01/"))
sum(str_detect(badEmployers$dt, "/02/"))
sum(str_detect(badEmployers$dt, "/03/"))
sum(str_detect(badEmployers$dt, "/04/"))
sum(str_detect(badEmployers$dt, "/05/"))
sum(str_detect(badEmployers$dt, "/06/"))
sum(str_detect(badEmployers$dt, "/07/"))
sum(str_detect(badEmployers$dt, "/08/"))
sum(str_detect(badEmployers$dt, "/09/"))
sum(str_detect(badEmployers$dt, "/10/"))
sum(str_detect(badEmployers$dt, "/11/"))
sum(str_detect(badEmployers$dt, "/12/"))
table(ymd(badEmployers$dt))
# popularSentenceMonth
popularSentenceMonth <-"11"
popularSentenceMonth
class(popularSentenceMonth)
length(popularSentenceMonth)
sum(str_detect(badEmployers$dt, "/01/"))
sum(str_detect(badEmployers$dt, "/02/"))
sum(str_detect(badEmployers$dt, "/03/"))
sum(str_detect(badEmployers$dt, "/04/"))
sum(str_detect(badEmployers$dt, "/05/"))
sum(str_detect(badEmployers$dt, "/06/"))
sum(str_detect(badEmployers$dt, "/07/"))
sum(str_detect(badEmployers$dt, "/08/"))
sum(str_detect(badEmployers$dt, "/09/"))
sum(str_detect(badEmployers$dt, "/10/"))
sum(str_detect(badEmployers$dt, "/11/"))
sum(str_detect(badEmployers$dt, "/12/"))
popularSentenceMonth <-"11"
popularSentenceMonth
table_lawcontent <-table(badEmployers$lawContent)
mostViolatedArticle_content <- names(table_lawcontent[table_lawcontent==max(table_lawcontent)])
mostViolatedArticle_content
max(sum(str_detect(badEmployers$dt, "/01/")),
sum(str_detect(badEmployers$dt, "/02/")),
sum(str_detect(badEmployers$dt, "/03/")),
sum(str_detect(badEmployers$dt, "/04/")),
sum(str_detect(badEmployers$dt, "/05/")),
sum(str_detect(badEmployers$dt, "/06/")),
sum(str_detect(badEmployers$dt, "/07/")),
sum(str_detect(badEmployers$dt, "/08/")),
sum(str_detect(badEmployers$dt, "/09/")),
sum(str_detect(badEmployers$dt, "/10/")),
sum(str_detect(badEmployers$dt, "/11/")),
sum(str_detect(badEmployers$dt, "/12/")))
popularSentenceMonth <-"11"
popularSentenceMonth
poppular_month <-max(sum(str_detect(badEmployers$dt, "/01/")),
sum(str_detect(badEmployers$dt, "/02/")),
sum(str_detect(badEmployers$dt, "/03/")),
sum(str_detect(badEmployers$dt, "/04/")),
sum(str_detect(badEmployers$dt, "/05/")),
sum(str_detect(badEmployers$dt, "/06/")),
sum(str_detect(badEmployers$dt, "/07/")),
sum(str_detect(badEmployers$dt, "/08/")),
sum(str_detect(badEmployers$dt, "/09/")),
sum(str_detect(badEmployers$dt, "/10/")),
sum(str_detect(badEmployers$dt, "/11/")),
sum(str_detect(badEmployers$dt, "/12/")))
popularSentenceMonth <-"11"
popularSentenceMonth
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
View(table)
str(table)
levels(table$國文)
ordered(table$級分)
ordered(table$級分)
ordered(table$國文)
degree <- ordered(table$`級分`)
chinesegrade <-ordered(table$`國文`)
# chinese
table$`級分`
table$`級分`+1
?paste0
paste0(table$`級分`,table$`國文`)
ordered(table$`國文`)
chinesedegree <-ordered(table$`國文`)
factor(chinesedegree)
factor(!chinesedegree)
oo = factor(chinesedegree)+1
1+1
chinesedegree <-ordered(table$`國文`)
factor(chinesedegree)
# chinese
levels(table$`國文`)
```{r ans21}
ordered(table$`國文`)
levels(table$`國文`)
levels(table$`國文`)
ordered(table$`國文`)
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
levels(table$`國文`)
table$`國文`
levels_new <- c(table$`國文`[c(16:1)])
levels_new <- c(table$`國文`[c(16:1)])
factor(
table$`國文`,
levels=levels_new,
ordered = T # 設定為可排序factor
)
# chinese
levels_new <- c(table$`國文`[c(1:16)])
factor(
table$`國文`,
levels=levels_new,
ordered = T # 設定為可排序factor
)
# chinese
levels(table$國文)
levels_new
levels_new <- c(table$`國文`[c(1:16)])
levels_new
!levels_new
!levels_new
levels_new <- c(table$`國文`[c(1:16)])
chinese <-
factor(
table$`國文`,
levels=table$`級分`+1,
ordered = T # 設定為可排序factor
)
# chinese
table$`級分`+1
levels_new <- c(table$`國文`[c(1:16)])
chinese <-
factor(
table$`國文`,
levels=table$`級分` +1,
ordered = T # 設定為可排序factor
)
# chinese
chinese
factor(table$國文)
levels_new <- c(table$`國文`[c(1:16)])
chinese <-
factor(
table$`國文`,
levels=table$`國文`[c(16:1)],
ordered = T # 設定為可排序factor
)
# chinese
chinese
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
chinese <-
factor(
table$`國文`,
levels=table$`國文`[c(16:1)],
ordered = T # 設定為可排序factor
)
chinese
table$`國文` <-as.factor(table$`國文`)
table$`國文` <- as.factor(table$`國文`)
levels(table$`國文`)
levels(table$`國文`)
table$`國文` <- as.factor(table$`國文`)
levelchinese <- levels(table$`國文`)
levels_new <- c(levelchinese[c(16:1)])
levels_new
#chinese
levels_chinese
levels_\chinese
levelschinese
levelchinese
table$`國文` <- as.factor(table$`國文`)
chinese <- levels(table$`國文`)
chinese
View(students10)
str(students10)
ntpu_namelist <-
students10$`姓名`[str_detect(students10$`志願`),`北大`]
ntpu_namelist <-
students10$`姓名`[c(str_detect(students10$`志願`),`北大`)]
ntpu_namelist <-
students10$`姓名`[str_detect(students10$`志願`,`北大`)]
ntpu_namelist <-
students10$`姓名`[str_detect(students10$`志願`,"北大")]
# ntpu_namelist
ntpu_namelist
students10[["志願"]]
class(students10$`國文`)
str_detect(students10$`志願`,"北大")
students10$`國文` >= 12
students10$`國文`  >= 12
students10$`英文`+ students10$`數學`
engplusmath<- students10$`英文`+ students10$`數學`
engplusmath >=26
str_detect(students10$`志願`,"北大")
students10$`國文`  >= 12
engplusmath<- students10$`英文`+ students10$`數學`
engplusmath >=26
# ntpu_econtpu_eco
first+second+third
first <- str_detect(students10$`志願`,"北大")
second <- students10$`國文`  >= 12
engplusmath<- students10$`英文`+ students10$`數學`
third <- engplusmath >=26
first+second+third
# ntpu_econtpu_eco
total <-first+second+third
ntpu_econtpu_eco <- students10$`姓名`[total=3]
ntpu_econtpu_eco
total
total=3
total==3
total <-first+second+third
total==3
ntpu_econtpu_eco <- students10$`姓名`[total==3]
ntpu_econtpu_eco
students10[["姓名"]]
total
namelist
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
View(params)
View(table)
View(students10)
table$`國文` <- as.factor(table$`國文`)
chinese <- levels(table$`國文`)
chinese
ntpu_namelist <-
students10$`姓名`[str_detect(students10$`志願`,"北大")]
ntpu_namelist
first <- str_detect(students10$`志願`,"北大")
second <- students10$`國文`  >= 12
engplusmath<- students10$`英文`+ students10$`數學`
third <- engplusmath >=26
total <-first+second+third
ntpu_econtpu_eco <- students10$`姓名`[total==3]
ntpu_econtpu_eco
students10$`姓名` %in% namelist
students10$`姓名`[students10$`姓名` %in% namelist]
congrats <-
paste0("恭喜",
students10$`姓名`[students10$`姓名` %in% namelist],
"同學錄取國立臺北大學經濟系"
)
congrats
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
mostViolatedArticle <-
table_countsByArticle[table_countsByArticle==max(table_countsByArticle)]
mostViolatedArticle
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
table_lawcontent <-table(badEmployers$lawContent)
mostViolatedArticle_content <- names(table_lawcontent[table_lawcontent==max(table_lawcontent)])
mostViolatedArticle_content
class(mostViolatedArticle)
poppular_month <-max(sum(str_detect(badEmployers$dt, "/01/")),
sum(str_detect(badEmployers$dt, "/02/")),
sum(str_detect(badEmployers$dt, "/03/")),
sum(str_detect(badEmployers$dt, "/04/")),
sum(str_detect(badEmployers$dt, "/05/")),
sum(str_detect(badEmployers$dt, "/06/")),
sum(str_detect(badEmployers$dt, "/07/")),
sum(str_detect(badEmployers$dt, "/08/")),
sum(str_detect(badEmployers$dt, "/09/")),
sum(str_detect(badEmployers$dt, "/10/")),
sum(str_detect(badEmployers$dt, "/11/")),
sum(str_detect(badEmployers$dt, "/12/")))
popularSentenceMonth <-"11"
popularSentenceMonth
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
table$`國文` <- as.factor(table$`國文`)
chinese <- levels(table$`國文`)
chinese
ntpu_namelist <-
students10$`姓名`[str_detect(students10$`志願`,"北大")]
ntpu_namelist
first <- str_detect(students10$`志願`,"北大")
second <- students10$`國文`  >= 12
engplusmath<- students10$`英文`+ students10$`數學`
third <- engplusmath >=26
total <-first+second+third
ntpu_econtpu_eco <- students10$`姓名`[total==3]
ntpu_econtpu_eco
congrats <-
paste0("恭喜",
students10$`姓名`[students10$`姓名` %in% namelist],
"同學錄取國立臺北大學經濟系"
)
congrats
